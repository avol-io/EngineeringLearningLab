{"version":3,"sources":["../src/app/shared/services/sort/sort.service.ts"],"names":[],"mappings":";;;;;;;AAAA,sCAA2C;AAC3C,0BAA4B;AAG5B,IAAa,WAAW;IAAxB;IA8CA,CAAC;IA5CG,+BAAS,GAAT,UAAU,KAAY,EAAE,UAAkB,EAAE,cAAsB,EAAE,gBAA0B,EAAE,YAAsB,EAAE,YAAiB;QAErI,IAAI,KAAK,GAAG,gBAAgB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,aAAa,GAAI,KAAK,KAAK,CAAC,CAAC,CAAE;QAEnC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAE/B,YAAY,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;gBAE7B,YAAY,CAAC,cAAc,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;gBACzC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,CAAC,CAAC,MAAM,CAAC,gBAAgB,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,MAAM,CAAC,YAAY,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAE/B,YAAY,CAAC,cAAc,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;gBACzC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;YAC9C,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,uBAAuB;YACvB,gBAAgB,GAAG,EAAE,CAAC;YACtB,YAAY,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACrC,EAAE;YAEF,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEzB,YAAY,CAAC,cAAc,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;YACxC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAC7C,CAAC;QAED,MAAM,CAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,gBAAgB,EAAE,YAAY,CAAC,CAAC;IAC7D,CAAC;IAED,uCAAiB,GAAjB,UAAkB,YAAiB;QAE/B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;YAC3B,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;YAC9B,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;QACnC,CAAC;IACL,CAAC;IACL,kBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,WAAW;IADvB,iBAAU,EAAE;GACA,WAAW,CA8CvB;AA9CY,kCAAW","file":"sort.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class SortService {\n\n    sortArray(array: any[], columnName: string, columnNameIcon: string, sortByProperties: string[], sortByOrders: string[], sortingIcons: any)  {\n\n        let index = sortByProperties.indexOf(columnName);\n        let isInSortArray =  index !== -1 ;\n\n        if (isInSortArray) {\n            if (sortByOrders[index] == 'asc') {\n\n                sortByOrders[index] = 'desc';\n\n                sortingIcons[columnNameIcon].asc = false;\n                sortingIcons[columnNameIcon].sort = true;\n            }\n            else {\n                _.pullAt(sortByProperties,[index]);\n                _.pullAt(sortByOrders,[index]);\n\n                sortingIcons[columnNameIcon].asc = false;\n                sortingIcons[columnNameIcon].sort = false;\n            }\n        } else {\n            // For one column sort:\n            sortByProperties = [];\n            sortByOrders = [];\n            this.resetSortingIcons(sortingIcons);\n            //\n\n            sortByProperties.push(columnName);\n            sortByOrders.push('asc');\n\n            sortingIcons[columnNameIcon].asc = true;\n            sortingIcons[columnNameIcon].sort = true;\n        }\n\n        return  _.orderBy(array, sortByProperties, sortByOrders);\n    }\n\n    resetSortingIcons(sortingIcons: any){\n\n        for (let key in sortingIcons) {\n            sortingIcons[key].asc = false;\n            sortingIcons[key].sort = false;\n        }\n    }\n}"]}